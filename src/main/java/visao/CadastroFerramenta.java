package visao;

import dao.FerramentaDAO;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import javax.swing.text.MaskFormatter;
import modelo.Ferramenta;

/**
 * Classe que representa a interface gráfica de cadastro de ferramentas.
 *
 * @author kauem
 */
public class CadastroFerramenta extends javax.swing.JFrame {

    MaskFormatter mfCusto;

    /**
     * Construtor da classe CadastroFerramenta.
     *
     * @author kauem
     */
    public CadastroFerramenta() {

        try {
            mfCusto = new MaskFormatter("R$##,##");
        } catch (ParseException ex) {
            System.out.println("erro na criação da mascara");
        }

        initComponents();

        DefaultTableModel modelo = (DefaultTableModel) jTableCadastroFerramenta.getModel();
        jTableCadastroFerramenta.setRowSorter(new TableRowSorter(modelo));

        // Permitir seleção de múltiplas linhas
        jTableCadastroFerramenta.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        //Centralizar valores
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);

        //Centralizar colunas desejadas
        jTableCadastroFerramenta.getColumnModel().getColumn(0).setCellRenderer(centerRenderer); // Coluna ferramenta
        jTableCadastroFerramenta.getColumnModel().getColumn(1).setCellRenderer(centerRenderer); // Coluna marca
        jTableCadastroFerramenta.getColumnModel().getColumn(2).setCellRenderer(centerRenderer); // Coluna valor
        jTableCadastroFerramenta.getColumnModel().getColumn(3).setCellRenderer(centerRenderer); // Coluna valor

        readJtable();
    }

    /**
     * Método responsável por atualizar a tabela com os dados das ferramentas
     * cadastradas.
     */
    public void readJtable() {
        DefaultTableModel modelo = (DefaultTableModel) jTableCadastroFerramenta.getModel();
        modelo.setNumRows(0);

        FerramentaDAO fdao = new FerramentaDAO();
        List<Ferramenta> listFerramentas = fdao.read();

        // Mapa para armazenar as ferramentas já existentes na tabela
        Map<String, Integer> ferramentasExistente = new HashMap<>();

        for (Ferramenta f : listFerramentas) {
            // Gerar uma chave única com base no nome, marca e custo da ferramenta
            String chave = f.getNome() + "-" + f.getMarca() + "-" + String.format("%.2f", f.getCusto());

            if (ferramentasExistente.containsKey(chave)) {
                // Se a ferramenta já existe na tabela, atualizar a quantidade
                int indice = ferramentasExistente.get(chave);
                int quantidadeAtual = (int) modelo.getValueAt(indice, 3);
                modelo.setValueAt(quantidadeAtual + f.getQuantidade(), indice, 3);
            } else {
                // Se a ferramenta não existe na tabela, adicionar uma nova linha
                modelo.addRow(new Object[]{
                    f.getNome(),
                    f.getMarca(),
                    String.format("R$ %.2f", f.getCusto()),
                    f.getQuantidade()
                });
                ferramentasExistente.put(chave, modelo.getRowCount() - 1); // Armazenar o índice da nova ferramenta
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblUnidade = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtInserirMarca = new javax.swing.JTextField();
        lblFerramenta = new javax.swing.JLabel();
        lblMarca = new javax.swing.JLabel();
        txtInserirMarcaa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCadastroFerramenta = new javax.swing.JTable();
        txtFormatCusto = new javax.swing.JFormattedTextField(mfCusto);
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtInserirNome = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnAdicionarFerramenta = new javax.swing.JButton();
        inputQuantidade = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        lblUnidade.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUnidade.setText("Custo");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Custo");

        txtInserirMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInserirMarcaActionPerformed(evt);
            }
        });
        txtInserirMarca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtInserirMarcaKeyPressed(evt);
            }
        });

        lblFerramenta.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFerramenta.setText("Ferramenta:");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastrar ferramentas");
        setBackground(new java.awt.Color(239, 35, 60));

        lblMarca.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblMarca.setText("Marca");

        txtInserirMarcaa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInserirMarcaaActionPerformed(evt);
            }
        });
        txtInserirMarcaa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtInserirMarcaaKeyPressed(evt);
            }
        });

        jTableCadastroFerramenta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Ferramenta", "Marca", "Valor", "Quantidade"
            }
        ));
        jTableCadastroFerramenta.setShowHorizontalLines(true);
        jTableCadastroFerramenta.setShowVerticalLines(true);
        jTableCadastroFerramenta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCadastroFerramentaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCadastroFerramenta);

        txtFormatCusto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtFormatCusto.setValue(0.00);
        txtFormatCusto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFormatCustoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFormatCustoFocusLost(evt);
            }
        });
        txtFormatCusto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFormatCustoKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText(" ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Nome");

        txtInserirNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInserirNomeActionPerformed(evt);
            }
        });
        txtInserirNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtInserirNomeKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Valor");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setText("Cadastrar Ferramentas");

        btnCancelar.setBackground(new java.awt.Color(255, 255, 255));
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(195, 47, 39));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAdicionarFerramenta.setBackground(new java.awt.Color(255, 255, 255));
        btnAdicionarFerramenta.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAdicionarFerramenta.setForeground(new java.awt.Color(0, 204, 0));
        btnAdicionarFerramenta.setText("Cadastrar");
        btnAdicionarFerramenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarFerramentaActionPerformed(evt);
            }
        });
        btnAdicionarFerramenta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnAdicionarFerramentaKeyPressed(evt);
            }
        });

        inputQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputQuantidadeActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Quantidade");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblMarca)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtInserirNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                        .addComponent(txtInserirMarcaa, javax.swing.GroupLayout.Alignment.LEADING)))
                                .addGap(215, 215, 215)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtFormatCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnAdicionarFerramenta))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(inputQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(44, 44, 44)
                .addComponent(jLabel3))
            .addGroup(layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jLabel7))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtInserirNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFormatCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMarca)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtInserirMarcaa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel3))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdicionarFerramenta, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método para cadastrar os dados de uma nova ferramenta.
     */
    private void dados() {

        FerramentaDAO dao = new FerramentaDAO();

        //carregando modelo da tabela
        DefaultTableModel modelo = (DefaultTableModel) jTableCadastroFerramenta.getModel();
        modelo.setNumRows(0);

        //pegando dados de entrada
        String nome = txtInserirNome.getText().trim();
        String marca = txtInserirMarcaa.getText().trim();
        String custoTexto = txtFormatCusto.getText().trim().replace("R$", "").replace(",", ".");
        String quantidadeTexto = inputQuantidade.getText().trim();

        //tratando excessoes
        try {
            if (nome.isEmpty() || marca.isEmpty() || custoTexto.isEmpty()) {
                JOptionPane.showMessageDialog(null, "todos os campos devem ser preenchidos.");
                return;
            }
            double custo;
            try {
                custo = Double.parseDouble(custoTexto);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Custo inválido.");
                return;
            }

            int quantidade;
            //se o usuario não inserir nenhum valor na quantidade, ela é 1
            if (quantidadeTexto.isEmpty()) {
                quantidade = 1;
            } else {
                quantidade = Integer.parseInt(quantidadeTexto);
            }

            Ferramenta novaFerramenta = new Ferramenta();
            novaFerramenta.setNome(nome);
            novaFerramenta.setMarca(marca);
            novaFerramenta.setCusto(custo);
            novaFerramenta.setQuantidade(quantidade);

            Ferramenta ferramentaExistente = dao.getPorNome(nome);
            if (ferramentaExistente != null) {
                ferramentaExistente.setQuantidade(ferramentaExistente.getQuantidade() + novaFerramenta.getQuantidade());
                dao.update(ferramentaExistente);
            } else {

                dao.create(novaFerramenta);
            }

            readJtable();

        } catch (Exception ex) {
            System.out.println("erro ao cadastrar ferramenta " + ex);
        }

    }

    private void txtInserirMarcaaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInserirMarcaaActionPerformed
    }//GEN-LAST:event_txtInserirMarcaaActionPerformed

    private void txtInserirMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInserirMarcaActionPerformed
    }//GEN-LAST:event_txtInserirMarcaActionPerformed

    /**
     * Ação ao pressionar a tecla "Enter" no campo de inserção de marca.
     *
     * @param evt evento de teclado
     */
    private void txtInserirMarcaaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInserirMarcaaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtFormatCusto.requestFocus();
        }
    }//GEN-LAST:event_txtInserirMarcaaKeyPressed

    /**
     * Ação ao pressionar a tecla "Enter" no campo de inserção de marca.
     *
     * @param evt evento de teclado
     */
    private void txtInserirMarcaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInserirMarcaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtFormatCusto.requestFocus();
        }
    }//GEN-LAST:event_txtInserirMarcaKeyPressed

    /**
     * Ação ao ganhar foco no campo de custo.
     *
     * @param evt evento de foco
     */
    private void txtFormatCustoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFormatCustoFocusGained
        if ("0,00".equals(txtFormatCusto.getText())) {
            txtFormatCusto.setText("");
        }
    }//GEN-LAST:event_txtFormatCustoFocusGained

    /**
     * Ação ao pressionar a tecla "Enter" no campo de custo.
     *
     * @param evt evento de teclado
     */
    private void txtFormatCustoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFormatCustoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnAdicionarFerramenta.requestFocus();
        }
    }//GEN-LAST:event_txtFormatCustoKeyPressed

    private void txtFormatCustoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFormatCustoFocusLost
    }//GEN-LAST:event_txtFormatCustoFocusLost

    private void jTableCadastroFerramentaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCadastroFerramentaMouseClicked
    }//GEN-LAST:event_jTableCadastroFerramentaMouseClicked

    private void txtInserirNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInserirNomeActionPerformed
    }//GEN-LAST:event_txtInserirNomeActionPerformed

    private void txtInserirNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInserirNomeKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txtInserirMarcaa.requestFocus();
        }
    }//GEN-LAST:event_txtInserirNomeKeyPressed

    /**
     * Ação ao pressionar o botão de cancelar.
     *
     * @param evt evento de ação
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Ação ao pressionar a tecla "Enter" no botão de adicionar ferramenta.
     *
     * @param evt evento de teclado
     */
    private void btnAdicionarFerramentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarFerramentaActionPerformed

        FerramentaDAO dao = new FerramentaDAO();

        //carregando modelo da tabela
        DefaultTableModel modelo = (DefaultTableModel) jTableCadastroFerramenta.getModel();
        modelo.setNumRows(0);

        //pegando dados de entrada
        String nome = txtInserirNome.getText().trim();
        String marca = txtInserirMarcaa.getText().trim();
        String custoTexto = txtFormatCusto.getText().trim().replace("R$", "").replace(",", ".");
        String quantidadeTexto = inputQuantidade.getText().trim();

        //tratando excessoes
        try {
            if (nome.isEmpty() || marca.isEmpty() || custoTexto.isEmpty()) {
                JOptionPane.showMessageDialog(null, "todos os campos devem ser preenchidos.");
                return;
            }
            double custo;
            try {
                custo = Double.parseDouble(custoTexto);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Custo inválido.");
                return;
            }

            int quantidade;
            //se o usuario não inserir nenhum valor na quantidade, ela é 1
            if (quantidadeTexto.isEmpty()) {
                quantidade = 1;
            } else {
                quantidade = Integer.parseInt(quantidadeTexto);
            }

            Ferramenta novaFerramenta = new Ferramenta();
            novaFerramenta.setNome(nome);
            novaFerramenta.setMarca(marca);
            novaFerramenta.setCusto(custo);
            novaFerramenta.setQuantidade(quantidade);

            Ferramenta ferramentaExistente = dao.getPorNome(nome);
            if (ferramentaExistente != null) {
                ferramentaExistente.setQuantidade(ferramentaExistente.getQuantidade() + novaFerramenta.getQuantidade());
                dao.update(ferramentaExistente);
            } else {

                dao.create(novaFerramenta);
            }

            readJtable();

        } catch (Exception ex) {
            System.out.println("erro ao cadastrar ferramenta " + ex);
        }


    }//GEN-LAST:event_btnAdicionarFerramentaActionPerformed

    private void btnAdicionarFerramentaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnAdicionarFerramentaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            dados();
        }
    }//GEN-LAST:event_btnAdicionarFerramentaKeyPressed

    private void inputQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputQuantidadeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroFerramenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarFerramenta;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JTextField inputQuantidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCadastroFerramenta;
    private javax.swing.JLabel lblFerramenta;
    private javax.swing.JLabel lblMarca;
    private javax.swing.JLabel lblUnidade;
    private javax.swing.JFormattedTextField txtFormatCusto;
    private javax.swing.JTextField txtInserirMarca;
    private javax.swing.JTextField txtInserirMarcaa;
    private javax.swing.JTextField txtInserirNome;
    // End of variables declaration//GEN-END:variables
}
